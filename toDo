COMPLETO -- Ver prioridades [!prioridades](./ReadmePrioridades.md)

-- BackEnd
[OK] inicializar Backend
[OK] estructura de carpetas
    [OK] /models (Users, Books, etc.)
    [OK] /routes (usersRoutes, clubsRoutes, etc.)
    [OK] /controllers (usersController, clubsController, etc.)
    [OK] /middlewares (authMiddleware, roleMiddleware, errorHandler, etc.)

  MODELOS
[OK] Users
[OK] Books
[] ReadClub
[] Comments
[OK] Review
[] ReviewRating (verif si mismo usuario verifica +1 vez)

VER belongsTo, hasMany, belongsToMany -- FOREIGN KEY en Express

[] Definir FKs en Express
    Usuario belongsTo Rol
    Usuario belongsToMany ClubLectura (through: UsuarioClub)
    ClubLectura belongsToMany Usuario (through: UsuarioClub)
    ClubLectura belongsTo Libro (libro_actual)
    Usuario hasMany Reseña, Comentario, Valoraciones
    Reseña hasMany Comentario
    Valoraciones belongsTo Usuario y a Reseña


-- CRUD (Logica de Backend)
  Auth (usar hash de contraseña - bcrypt)
[OK] Registro
[OK] Login

  Usuario
[OK] GET api/users
[OK] GET api/users/:id
[OK] PUT api/profile
[OK] DELETE api/users/:id -- solo admin

  ClubLectura
[] POST api/clubs
[] GET api/clubs
[] POST api/clubs/:id/join
[] GET api/users/:id/clubs

  Libros
[] POST api/clubs/:id/current-book

[OK] GET api/books                 -- falta proteger rutas
[OK] GET api/books/:id             -- falta proteger rutas
[OK] PUT api/books/:id             -- falta proteger rutas
[OK] DELETE api/books/:id          -- falta proteger rutas


  Reseñas y Comentarios
[] POST api/reviews
[] POST api/reviews/:id/comments
[] POST api/reviews/:id/rating
[] PUT api/reviews/:id
[] PUT api/reviews/:id/comments
[] PUT api/reviews/:id/rating

→ TODO ESTO SE RESUME A:
📂 Controllers
    [OK] AuthController
    [] ClubsController
    [] ReviewsController
    [] CommentsController
    [] RatingsController

🔁 Routes
    [OK] Rutas de autenticación (register, login)
    [OK] Rutas de usuario (/users, /users/:id, etc.)
    [] Rutas de club de lectura (/clubs, /clubs/:id, /join, etc.)
    [] Rutas de libros actuales (/clubs/:id/current-book)
    [] Rutas de reseñas, comentarios y valoraciones


-- FrontEnd

[X] Setear proyecto (npm create)
[] Pantallas principales
 - [X] Landing inicial
 - [] Login
 - [X] Registro
 - [] Panel de Usuario (perfil, clubes) - Editar perfil
 - [OK] Home Page (Lista de clubes)
 - [] Detalle de Club
 - [] Dashboard de Moderadores de Club - permiso de Admin -> maneja dashboard
 - [OK] Crear Club
 - [] Crear reseña -> textarea
 - [] Crear Comentario -> textarea
 - [] Valorar reseñas (incluir vista de promedio de rating)
 - [] Validaciones de formularios
 - [OK] Filtro y búsqueda de clubes
 - [] Mensajes de éxito / error con React-Toastify

[] Proteccion de rutas segun rol
[X] Manejo de 404 / 500
[] Dashboard para SuperAdmin (Manejo de users y clubes)
    GET /admin/users → lista todos los usuarios (con sus roles)
    PUT /admin/users/:id → cambiar el rol de un usuario
    DELETE /admin/users/:id → eliminar usuarios si lo permitís
    GET /admin/clubs → todos los clubes
    DELETE /admin/clubs/:id → eliminar clubes si lo necesitás

[] Dashboard para Admin (Manejo de clubes) -- se puede cambiar
    GET /admin/clubs/:id/members → usuarios de su club
    GET /admin/clubs/:id/reviews → reseñas en su club
    DELETE /admin/reviews/:id → moderar contenido
    DELETE /admin/comments/:id → moderar comentarios


-- Extras para front:
[] Loaders
[] Lista intermedia de creador de clubes


-- Solo Admin
🔐 Rutas especiales para Admin y SuperAdmin

[] GET /admin/users → listado de usuarios (solo superadmin)
[] PUT /admin/users/:id → cambiar rol de usuario (solo superadmin)
[] DELETE /admin/users/:id → eliminar usuario (opcional)       -  bloqueo extremo
[] GET /admin/clubs → todos los clubes (admin o superadmin)
[] DELETE /admin/clubs/:id → eliminar club (admin o superadmin)
[] DELETE /admin/reviews/:id → moderar reseña (admin o superadmin)
[] DELETE /admin/comments/:id → moderar comentario (admin o superadmin)

[] GET /clubs/:id/members → miembros del club (Todos)
[] DELETE /admin/clubs/:id → eliminar miembro de un club (admin o superadmin)

[] PUT api/books/:id → Actualiza libros (solo superadmin)
[] DELETE api/books/:id → Borra libros (solo superadmin)
